[{"content":" 背景\r解决无网络环境下安装python包的问题 解决跨架构下安装python包，如x86环境下载arm架构下的pip包 解决方案\r在线下载包及其依赖\r通过 `PyPI官网 下载所需的包。这种方式对于没有依赖或依赖较少的包较为方便。但对于依赖众多的包，需要逐个下载，过程较为繁琐。\n使用pip下载\r准备联网环境\n首先确保有一个可以访问互联网的环境,最好是相同python版本和架构\n下载包及其依赖：\n使用以下命令下载所需的单个包和它的所有依赖： 1 pip3 download -d pip-package -i https://pypi.tuna.tsinghua.edu.cn/simple requests 其中，-d 参数指定下载目录。 -i 参数指定使用清华镜像源以加速下载。 跨架构安装：\n对于需要在不同架构之间安装包的情况，首先在目标架构的环境下使用上述方法下载包。 然后将下载好的包复制到目标环境中进行安装。 注意事项\r确保下载的包与系统中Python的版本和架构相兼容。 如果遇到下载速度慢或失败的问题，可以尝试更换其他镜像源，如阿里云、中国科技大学等提供的镜像源。 在使用pip下载包时，注意检查网络连接，以免下载中断导致安装失败。 ","date":"2024-08-26T17:29:34+08:00","permalink":"http://localhost:1313/p/pip-offline-package/","title":"pip制作离线包"},{"content":" docker启动所有已经停止的容器\r1 docker start $(docker ps -a | awk \u0026#39;{ print $1}\u0026#39; | tail -n +2) docker删除正在运行的单个容器\r1 docker rm -f \u0026lt;container_id\u0026gt; docker删除正在运行的所有容器\r1 docker rm -f $(docker ps -q) ","date":"2024-08-22T17:14:23+08:00","permalink":"http://localhost:1313/p/docker-command/","title":"Docker命令大全"},{"content":" 卸载旧版本docker\r1 2 3 4 5 6 7 8 yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine 安装依赖\r1 yum install -y yum-utils 配置yum docker源\r1 2 3 yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo 安装docker\r1 yum install docker-ce docker-ce-cli containerd.io 启动docker\r1 systemctl start docker ","date":"2024-08-22T16:40:12+08:00","permalink":"http://localhost:1313/p/centos-install-docker/","title":"Centos7安装docker"}]