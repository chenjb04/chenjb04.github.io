<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Pages on cx330&#39;s blog</title>
        <link>http://localhost:1313/page/</link>
        <description>Recent content in Pages on cx330&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>cx330</copyright><atom:link href="http://localhost:1313/page/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>关于</title>
        <link>http://localhost:1313/%E5%85%B3%E4%BA%8E/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/%E5%85%B3%E4%BA%8E/</guid>
        <description>&lt;div id=&#34;heatmap&#34; style=&#34;
  max-width: 1900px;
  height: 180px;
  padding: 2px;
  text-align: center;
  &#34;
&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/echarts@5.3.0/dist/echarts.min.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
  var chartDom = document.getElementById(&#39;heatmap&#39;);
  var myChart = echarts.init(chartDom);
  window.onresize = function() {
      myChart.resize();
  };
  var option;

  
  
  
  
  
  
  var dataMap = new Map();
  
    var key = &#34;2024-09-20&#34;;
    var value = dataMap.get(key);
    var wordCount =  424 ;
    var link = &#34;/p/centos-update-gcc/&#34;;
    var title = &#34;centos7升级GCC版本&#34;;
    
    
    if (value == null) {
      dataMap.set(key, [{wordCount, link, title}]);
    } else {
      value.push({wordCount, link, title});
    }
    var key = &#34;2024-09-14&#34;;
    var value = dataMap.get(key);
    var wordCount =  341 ;
    var link = &#34;/p/centos-compile-python3/&#34;;
    var title = &#34;centos7编译安装Python3.12.6&#34;;
    
    
    if (value == null) {
      dataMap.set(key, [{wordCount, link, title}]);
    } else {
      value.push({wordCount, link, title});
    }
    var key = &#34;2024-09-13&#34;;
    var value = dataMap.get(key);
    var wordCount =  547 ;
    var link = &#34;/p/arm-nmap-compile/&#34;;
    var title = &#34;ARM架构下编译安装nmap7.95&#34;;
    
    
    if (value == null) {
      dataMap.set(key, [{wordCount, link, title}]);
    } else {
      value.push({wordCount, link, title});
    }
    var key = &#34;2024-09-03&#34;;
    var value = dataMap.get(key);
    var wordCount =  1228 ;
    var link = &#34;/p/python-list-remove/&#34;;
    var title = &#34;Python 列表删除元素&#34;;
    
    
    if (value == null) {
      dataMap.set(key, [{wordCount, link, title}]);
    } else {
      value.push({wordCount, link, title});
    }
    var key = &#34;2024-08-28&#34;;
    var value = dataMap.get(key);
    var wordCount =  462 ;
    var link = &#34;/p/shell-compare-version/&#34;;
    var title = &#34;shell比较版本号大小&#34;;
    
    
    if (value == null) {
      dataMap.set(key, [{wordCount, link, title}]);
    } else {
      value.push({wordCount, link, title});
    }
    var key = &#34;2024-08-26&#34;;
    var value = dataMap.get(key);
    var wordCount =  425 ;
    var link = &#34;/p/pip-offline-package/&#34;;
    var title = &#34;pip制作离线包&#34;;
    
    
    if (value == null) {
      dataMap.set(key, [{wordCount, link, title}]);
    } else {
      value.push({wordCount, link, title});
    }
    var key = &#34;2024-08-22&#34;;
    var value = dataMap.get(key);
    var wordCount =  78 ;
    var link = &#34;/p/docker-command/&#34;;
    var title = &#34;Docker命令大全&#34;;
    
    
    if (value == null) {
      dataMap.set(key, [{wordCount, link, title}]);
    } else {
      value.push({wordCount, link, title});
    }
    var key = &#34;2024-08-22&#34;;
    var value = dataMap.get(key);
    var wordCount =  91 ;
    var link = &#34;/p/centos-install-docker/&#34;;
    var title = &#34;Centos7安装docker&#34;;
    
    
    if (value == null) {
      dataMap.set(key, [{wordCount, link, title}]);
    } else {
      value.push({wordCount, link, title});
    }var data = [];
  
  for (const [key, value] of dataMap.entries()) {
    var sum = 0;
    for (const v of value) {
      sum += v.wordCount;
    }
    data.push([key, (sum / 1000).toFixed(1)]);
  }
  
  var startDate = new Date();
  var year_Mill = startDate.setFullYear((startDate.getFullYear() - 1));
  var startDate = +new Date(year_Mill);
  var endDate = +new Date();

  var dayTime = 3600 * 24 * 1000;
  startDate = echarts.format.formatTime(&#39;yyyy-MM-dd&#39;, startDate);
  endDate = echarts.format.formatTime(&#39;yyyy-MM-dd&#39;, endDate);

  
  function heatmap_width(months){             
    var startDate = new Date();
    var mill = startDate.setMonth((startDate.getMonth() - months));
    var endDate = +new Date();
    startDate = +new Date(mill);

    endDate = echarts.format.formatTime(&#39;yyyy-MM-dd&#39;, endDate);
    startDate = echarts.format.formatTime(&#39;yyyy-MM-dd&#39;, startDate);

    var showmonth = [];
    showmonth.push([
        startDate,
        endDate
    ]);
    return showmonth
  };

  function getRangeArr() {
    const windowWidth = window.innerWidth;
    if (windowWidth &gt;= 600) {
      return heatmap_width(12);
    } else if (windowWidth &gt;= 400) {
      return heatmap_width(9);
    } else {
      return heatmap_width(6);
    }
  }

  option = {
    title: {
        top: 0,
        left: &#39;center&#39;,
        text: &#39;博客热力图&#39;
    },
    tooltip: {
      hideDelay: 1000,
      enterable: true,
      formatter: function (p) {
        const date = p.data[0];
        const posts = dataMap.get(date);
        var content = `${date}`;
        for (const [i, post] of posts.entries()) {
            content += &#34;&lt;br&gt;&#34;;
            var link = post.link;
            var title = post.title;
            var wordCount = (post.wordCount / 1000).toFixed(1);
            content += `&lt;a href=&#34;${link}&#34; target=&#34;_blank&#34;&gt;${title} | ${wordCount} k&lt;/a&gt;`
        }
        return content;
      }
    },
    visualMap: {
        min: 0,
        max: 10,
        type: &#39;piecewise&#39;,
        orient: &#39;horizontal&#39;,
        left: &#39;center&#39;,
        top: 30,
        
        inRange: {   
          
          color: [&#39;#7aa8744c&#39;, &#39;#7AA874&#39; ] 
        },
        splitNumber: 4,
        text: [&#39;千字&#39;, &#39;&#39;],
        showLabel: true,
        itemGap: 20,
    },
    calendar: {
        top: 80,
        left: 20,
        right: 4,
        cellSize: [&#39;auto&#39;, 13],
        range: getRangeArr(),
        itemStyle: {
            color: &#39;#F1F1F1&#39;,
            borderWidth: 1.5,
            borderColor: &#39;#fff&#39;,
        },
        yearLabel: { show: false },
        
        splitLine: {
          lineStyle: {
            color: &#39;rgba(0, 0, 0, 0.0)&#39;,
            
            
            
            
          }
        }
    },
    series: {
        type: &#39;heatmap&#39;,
        coordinateSystem: &#39;calendar&#39;,
        data: data,
    }
  };
  myChart.setOption(option);
  myChart.on(&#39;click&#39;, function(params) {
    if (params.componentType === &#39;series&#39;) {
      
      const post = dataMap.get(params.data[0])[0];
      const link = window.location.origin + post.link;
      window.open(link, &#39;_blank&#39;).focus();
    }
});
&lt;/script&gt; 

&lt;h2 id=&#34;关于本站&#34;&gt;关于本站
&lt;/h2&gt;&lt;p&gt;搭建：基于hugo stack主题搭建（感谢stack作者开源）&lt;/p&gt;
&lt;p&gt;部署：Github pages&lt;/p&gt;
&lt;p&gt;内容：主要记录一些自己多年工作经验、学习的总结（年纪大了，脑子不好，需要记录）&lt;/p&gt;
&lt;p&gt;更新：希望能够坚持下去吧（自己都不信）&lt;/p&gt;
&lt;h2 id=&#34;关于我&#34;&gt;关于我
&lt;/h2&gt;&lt;p&gt;一位Python码农，高级打工牛马，从事多年网络安全搬砖工作，擅长Python开发&lt;/p&gt;
&lt;p&gt;主机游戏爱好者，喜欢玩魂游（又菜又爱玩），不太喜欢竞技类游戏（老年人选手，打不过）&lt;/p&gt;
&lt;h2 id=&#34;关于游戏&#34;&gt;关于游戏
&lt;/h2&gt;&lt;p&gt;19年左右入坑主机游戏，买了一台PS5，只能说真香，前前后后玩了很多游戏，最后发现魂类游戏才是归宿&lt;/p&gt;
&lt;p&gt;白金的游戏：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;师傅&lt;/li&gt;
&lt;li&gt;潜水员戴夫&lt;/li&gt;
&lt;li&gt;只狼&lt;/li&gt;
&lt;li&gt;天穗之咲稻姬&lt;/li&gt;
&lt;li&gt;HUMANITY&lt;/li&gt;
&lt;li&gt;血源诅咒&lt;/li&gt;
&lt;li&gt;艾尔登法环&lt;/li&gt;
&lt;li&gt;漫威蜘蛛侠&lt;/li&gt;
&lt;li&gt;战神5&lt;/li&gt;
&lt;li&gt;Trophy set&lt;/li&gt;
&lt;li&gt;对马岛之魂&lt;/li&gt;
&lt;li&gt;战神4&lt;/li&gt;
&lt;li&gt;瑞奇与叮当&lt;/li&gt;
&lt;li&gt;机器人&lt;/li&gt;
&lt;li&gt;刺客信条2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近在玩国产3A黑神话悟空，国产之光，必须推荐，玩的同时也做了攻略，视频放在了抖音&lt;code&gt;Sakuragi___&lt;/code&gt;, 欢迎点赞关注&lt;/p&gt;
</description>
        </item>
        <item>
        <title>归档</title>
        <link>http://localhost:1313/archives/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/archives/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
